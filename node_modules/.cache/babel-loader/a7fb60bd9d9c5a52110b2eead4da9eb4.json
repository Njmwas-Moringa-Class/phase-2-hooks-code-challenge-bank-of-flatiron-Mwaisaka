{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mwaisakajnr/Development/code/phase_2/phase-2-hooks-code-challenge-bank-of-flatiron-Mwaisaka/src/components/TransactionsList.js\",\n    _s = $RefreshSig$();\n\n// // import React from \"react\";\n// // //TransactionsList.js\n// // import Transaction from \"./Transaction\";\n// // function TransactionsList() {\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {/* render a list of <Transaction> components here */}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n// // export default TransactionsList;\n// // import React from \"react\";\n// // import Transaction from \"./Transaction\";\n// // function TransactionsList() {\n// //   // Assume you have transaction data, replace this with your actual data\n// //   const transactionsData = [\n// //     { id: 1, date: \"2023-01-01\", description: \"Payment\", category: \"Income\", amount: 100 },\n// //     { id: 2, date: \"2023-01-02\", description: \"Groceries\", category: \"Expenses\", amount: -50 },\n// //     // Add more transactions as needed\n// //   ];\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {transactionsData.map((transaction) => (\n// //           <Transaction\n// //             key={transaction.id}\n// //             date={transaction.date}\n// //             description={transaction.description}\n// //             category={transaction.category}\n// //             amount={transaction.amount}\n// //           />\n// //         ))}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n// // export default TransactionsList;\n// //This achieves the first deliverable\n// import React, { useEffect, useState } from \"react\";\n// import Transaction from \"./Transaction\";\n// function TransactionsList() {\n//   const [transactionsData, setTransactionsData] = useState([]);\n//   useEffect(() => {\n//     // Fetch data from the provided JSON server\n//     fetch(\"http://localhost:8001/transactions\")\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         return response.json();\n//       })\n//       .then((data) => {\n//         setTransactionsData(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching data:\", error);\n//       });\n//   }, []);\n//   return (\n//     <table className=\"ui celled striped padded table\">\n//       <tbody>\n//         <tr>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Date</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Description</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Category</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Amount</h3>\n//           </th>\n//         </tr>\n//         {transactionsData.map((transaction) => (\n//           <Transaction\n//             key={transaction.id}\n//             date={transaction.date}\n//             description={transaction.description}\n//             category={transaction.category}\n//             amount={transaction.amount}\n//           />\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// }\n// export default TransactionsList;\nimport React, { useEffect, useState } from \"react\";\nimport Transaction from \"./Transaction\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction TransactionsList() {\n  _s();\n\n  const [transactionsData, setTransactionsData] = useState([]);\n  useEffect(() => {\n    // Fetch data from the provided JSON server\n    fetch(\"http://localhost:8001/transactions\").then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      return response.json();\n    }).then(data => {\n      setTransactionsData(data);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n\n  const addTransaction = newTransaction => {\n    // Add the new transaction to the local state\n    setTransactionsData([...transactionsData, newTransaction]); // Post the new transaction to the backend API for persistence\n\n    fetch(\"http://localhost:3000/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTransaction)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      return response.json();\n    }).then(data => {\n      console.log(\"New transaction added:\", data);\n    }).catch(error => {\n      console.error(\"Error adding new transaction:\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      onAddTransaction: addTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ui celled striped padded table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), transactionsData.map(transaction => /*#__PURE__*/_jsxDEV(Transaction, {\n          date: transaction.date,\n          description: transaction.description,\n          category: transaction.category,\n          amount: transaction.amount\n        }, transaction.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsList, \"J7T/y+KSilPhGGzZGQp0ZT0z5Q4=\");\n\n_c = TransactionsList;\nexport default TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/home/mwaisakajnr/Development/code/phase_2/phase-2-hooks-code-challenge-bank-of-flatiron-Mwaisaka/src/components/TransactionsList.js"],"names":["React","useEffect","useState","Transaction","AddTransactionForm","TransactionsList","transactionsData","setTransactionsData","fetch","then","response","ok","Error","status","json","data","catch","error","console","addTransaction","newTransaction","method","headers","body","JSON","stringify","log","map","transaction","date","description","category","amount","id"],"mappings":";;;;;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,EAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAO,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAW,uBAAsBF,QAAQ,CAACG,MAAO,EAAjD,CAAN;AACD;;AACD,aAAOH,QAAQ,CAACI,IAAT,EAAP;AACD,KANH,EAOGL,IAPH,CAOSM,IAAD,IAAU;AACdR,MAAAA,mBAAmB,CAACQ,IAAD,CAAnB;AACD,KATH,EAUGC,KAVH,CAUUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD,KAZH;AAaD,GAfQ,EAeN,EAfM,CAAT;;AAiBA,QAAME,cAAc,GAAIC,cAAD,IAAoB;AACzC;AACAb,IAAAA,mBAAmB,CAAC,CAAC,GAAGD,gBAAJ,EAAsBc,cAAtB,CAAD,CAAnB,CAFyC,CAIzC;;AACAZ,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1Ca,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,cAAf;AALoC,KAAvC,CAAL,CAOGX,IAPH,CAOSC,QAAD,IAAc;AAClB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAW,uBAAsBF,QAAQ,CAACG,MAAO,EAAjD,CAAN;AACD;;AACD,aAAOH,QAAQ,CAACI,IAAT,EAAP;AACD,KAZH,EAaGL,IAbH,CAaSM,IAAD,IAAU;AACdG,MAAAA,OAAO,CAACQ,GAAR,CAAY,wBAAZ,EAAsCX,IAAtC;AACD,KAfH,EAgBGC,KAhBH,CAgBUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,+BAAd,EAA+CA,KAA/C;AACD,KAlBH;AAmBD,GAxBD;;AA0BA,sBACE;AAAA,4BACE,QAAC,kBAAD;AAAoB,MAAA,gBAAgB,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAC,gCAAjB;AAAA,6BACE;AAAA,gCACE;AAAA,kCACE;AAAA,mCACE;AAAI,cAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,mCACE;AAAI,cAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAA,mCACE;AAAI,cAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF,eAUE;AAAA,mCACE;AAAI,cAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAeGb,gBAAgB,CAACqB,GAAjB,CAAsBC,WAAD,iBACpB,QAAC,WAAD;AAEE,UAAA,IAAI,EAAEA,WAAW,CAACC,IAFpB;AAGE,UAAA,WAAW,EAAED,WAAW,CAACE,WAH3B;AAIE,UAAA,QAAQ,EAAEF,WAAW,CAACG,QAJxB;AAKE,UAAA,MAAM,EAAEH,WAAW,CAACI;AALtB,WACOJ,WAAW,CAACK,EADnB;AAAA;AAAA;AAAA;AAAA,gBADD,CAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GA9EQ5B,gB;;KAAAA,gB;AAgFT,eAAeA,gBAAf","sourcesContent":["// // import React from \"react\";\n\n// // //TransactionsList.js\n\n// // import Transaction from \"./Transaction\";\n\n// // function TransactionsList() {\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {/* render a list of <Transaction> components here */}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n\n// // export default TransactionsList;\n\n// // import React from \"react\";\n// // import Transaction from \"./Transaction\";\n\n// // function TransactionsList() {\n// //   // Assume you have transaction data, replace this with your actual data\n// //   const transactionsData = [\n// //     { id: 1, date: \"2023-01-01\", description: \"Payment\", category: \"Income\", amount: 100 },\n// //     { id: 2, date: \"2023-01-02\", description: \"Groceries\", category: \"Expenses\", amount: -50 },\n// //     // Add more transactions as needed\n// //   ];\n\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {transactionsData.map((transaction) => (\n// //           <Transaction\n// //             key={transaction.id}\n// //             date={transaction.date}\n// //             description={transaction.description}\n// //             category={transaction.category}\n// //             amount={transaction.amount}\n// //           />\n// //         ))}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n\n// // export default TransactionsList;\n\n\n\n\n// //This achieves the first deliverable\n\n// import React, { useEffect, useState } from \"react\";\n// import Transaction from \"./Transaction\";\n\n// function TransactionsList() {\n//   const [transactionsData, setTransactionsData] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch data from the provided JSON server\n//     fetch(\"http://localhost:8001/transactions\")\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         return response.json();\n//       })\n//       .then((data) => {\n//         setTransactionsData(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching data:\", error);\n//       });\n//   }, []);\n\n//   return (\n//     <table className=\"ui celled striped padded table\">\n//       <tbody>\n//         <tr>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Date</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Description</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Category</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Amount</h3>\n//           </th>\n//         </tr>\n//         {transactionsData.map((transaction) => (\n//           <Transaction\n//             key={transaction.id}\n//             date={transaction.date}\n//             description={transaction.description}\n//             category={transaction.category}\n//             amount={transaction.amount}\n//           />\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// }\n\n// export default TransactionsList;\n\n\n\nimport React, { useEffect, useState } from \"react\";\nimport Transaction from \"./Transaction\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction TransactionsList() {\n  const [transactionsData, setTransactionsData] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from the provided JSON server\n    fetch(\"http://localhost:8001/transactions\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setTransactionsData(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  const addTransaction = (newTransaction) => {\n    // Add the new transaction to the local state\n    setTransactionsData([...transactionsData, newTransaction]);\n\n    // Post the new transaction to the backend API for persistence\n    fetch(\"http://localhost:3000/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newTransaction),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log(\"New transaction added:\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error adding new transaction:\", error);\n      });\n  };\n\n  return (\n    <div>\n      <AddTransactionForm onAddTransaction={addTransaction} />\n      <table className=\"ui celled striped padded table\">\n        <tbody>\n          <tr>\n            <th>\n              <h3 className=\"ui center aligned header\">Date</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Description</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Category</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Amount</h3>\n            </th>\n          </tr>\n          {transactionsData.map((transaction) => (\n            <Transaction\n              key={transaction.id}\n              date={transaction.date}\n              description={transaction.description}\n              category={transaction.category}\n              amount={transaction.amount}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default TransactionsList;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}