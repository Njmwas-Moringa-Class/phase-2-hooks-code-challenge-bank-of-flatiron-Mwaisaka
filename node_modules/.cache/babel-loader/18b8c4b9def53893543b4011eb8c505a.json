{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mwaisakajnr/Development/code/phase_2/phase-2-hooks-code-challenge-bank-of-flatiron-Mwaisaka/src/components/TransactionsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Transaction from \"./Transaction\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction TransactionsList({\n  handleSearch,\n  searchTerm\n}) {\n  _s();\n\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  const applySearchFilter = useCallback(data => {\n    const filtered = data.filter(transaction => transaction.description.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredTransactions(filtered);\n  }, [searchTerm]);\n  useEffect(() => {\n    // Fetch data from the provided JSON server\n    fetch(\"http://localhost:8001/transactions\").then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      return response.json();\n    }).then(data => {\n      setTransactionsData(data);\n      applySearchFilter(data);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, [searchTerm, applySearchFilter]); // Include applySearchFilter in the dependency array\n\n  const addTransaction = newTransaction => {\n    // Post the new transaction to the backend API for persistence\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTransaction)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      return response.json();\n    }).then(data => {\n      setTransactionsData([...transactionsData, data]); //Update state with the new transaction\n\n      applySearchFilter([...transactionsData, data]); //Update filtered transactions\n\n      console.log(\"New transaction added:\", data);\n    }).catch(error => {\n      console.error(\"Error adding new transaction:\", error);\n    });\n  };\n\n  const deleteTransaction = id => {\n    // Delete the transaction from the backend using the unique id\n    fetch(`http://localhost:8001/transactions/${id}`, {\n      method: \"DELETE\"\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      setTransactionsData(transactionsData.filter(transaction => transaction.id !== id));\n      applySearchFilter(transactionsData.filter(transaction => transaction.id !== id));\n      console.log(\"Transaction deleted successfully!\");\n    }).catch(error => {\n      console.error(\"Error deleting transaction:\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      onAddTransaction: addTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ui celled striped padded table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), filteredTransactions.map(transaction => /*#__PURE__*/_jsxDEV(Transaction, {\n          id: transaction.id,\n          date: transaction.date,\n          description: transaction.description,\n          category: transaction.category,\n          amount: transaction.amount,\n          onDelete: deleteTransaction\n        }, transaction.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\xA9 Page Created by Frank Mwaisaka\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsList, \"/nqzpfWHlGlarRcJZUjC3+FEGQ8=\");\n\n_c = TransactionsList;\nexport default TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/home/mwaisakajnr/Development/code/phase_2/phase-2-hooks-code-challenge-bank-of-flatiron-Mwaisaka/src/components/TransactionsList.js"],"names":["React","useEffect","useState","useCallback","Transaction","AddTransactionForm","TransactionsList","handleSearch","searchTerm","transactionsData","setTransactionsData","filteredTransactions","setFilteredTransactions","applySearchFilter","data","filtered","filter","transaction","description","toLowerCase","includes","fetch","then","response","ok","Error","status","json","catch","error","console","addTransaction","newTransaction","method","headers","body","JSON","stringify","log","deleteTransaction","id","map","date","category","amount"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport Transaction from \"./Transaction\";\nimport AddTransactionForm from \"./AddTransactionForm\"; \n\nfunction TransactionsList({ handleSearch, searchTerm }) {\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n\n  const applySearchFilter = useCallback(\n    (data) => {\n      const filtered = data.filter((transaction) =>\n        transaction.description.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      setFilteredTransactions(filtered);\n    },\n    [searchTerm]\n  );\n\n  useEffect(() => {\n    // Fetch data from the provided JSON server\n    fetch(\"http://localhost:8001/transactions\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setTransactionsData(data);\n        applySearchFilter(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, [searchTerm, applySearchFilter]); // Include applySearchFilter in the dependency array\n\n  const addTransaction = (newTransaction) => {\n    // Post the new transaction to the backend API for persistence\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newTransaction),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setTransactionsData([...transactionsData, data]); //Update state with the new transaction\n        applySearchFilter([...transactionsData, data]); //Update filtered transactions\n        console.log(\"New transaction added:\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error adding new transaction:\", error);\n      });\n  };\n\n  const deleteTransaction = (id) => {\n    // Delete the transaction from the backend using the unique id\n    fetch(`http://localhost:8001/transactions/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        setTransactionsData(transactionsData.filter((transaction) => transaction.id !== id));\n        applySearchFilter(transactionsData.filter((transaction) => transaction.id !== id));\n        console.log(\"Transaction deleted successfully!\");\n      })\n      .catch((error) => {\n        console.error(\"Error deleting transaction:\", error);\n      });\n  };\n\n  return (\n    <div>\n      <AddTransactionForm onAddTransaction={addTransaction} />\n      <table className=\"ui celled striped padded table\">\n        <tbody>\n          <tr>\n            <th>\n              <h3 className=\"ui center aligned header\">Date</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Description</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Category</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Amount</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Actions</h3>\n            </th>\n          </tr>\n          {filteredTransactions.map((transaction) => (\n            <Transaction\n              key={transaction.id}\n              id={transaction.id}\n              date={transaction.date}\n              description={transaction.description}\n              category={transaction.category}\n              amount={transaction.amount}\n              onDelete={deleteTransaction}\n            />\n          ))}\n        </tbody>\n      </table>\n      <h4>© Page Created by Frank Mwaisaka</h4>\n    </div>\n  );\n}\n\nexport default TransactionsList;\n"]},"metadata":{},"sourceType":"module"}